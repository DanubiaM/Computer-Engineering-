<?xml version="1.0" encoding="utf-8"?>
<OpcServerConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <UaServerConfig>
        <!--Trace configuration
    This part of the configuration defines the trace settings for OPC UA Stack and OPC UA Application.-->
        <Trace>
            <!--Enable UA stack trace true/false-->
            <UaStackTraceEnabled>true</UaStackTraceEnabled>
            <!--UA stack trace level. Possible values NONE, ERROR, WARNING, SYSTEM, INFO, DEBUG, CONTENT, ALL
                NONE    - No Trace
                ERROR   - Critical errors (unexpected and/or requiring external actions) which require attention
                WARNING - Non-critical faults which should not go unnoticed but are handled internally
                SYSTEM  - Rare major events (good cases) like initializations, shut-down, etc.
                INFO    - Regular good case events like connects, renews
                DEBUG   - Used for debugging purposes
                CONTENT - Used to add additional content (i.e. whole message bodies) to debug traces
                ALL     - All
              -->
            <UaStackTraceLevel>ERROR</UaStackTraceLevel>
            <!--Enable UA server application trace true/false-->
            <UaAppTraceEnabled>true</UaAppTraceEnabled>
            <!--UA server application trace level. Possible values NoTrace, Errors, Warning, Info, InterfaceCall, CtorDtor, ProgramFlow, Data
                NoTrace       - No Trace
                Errors        - Unexpected errors
                Warning       - Unexpected behaviour that is not an error
                Info          - Information about important activities like connection establishment
                InterfaceCall - Calls to module interfaces
                CtorDtor      - Creation and destruction of objects
                ProgramFlow   - Internal program flow
                Data          - Data
              -->
            <UaAppTraceLevel>Errors</UaAppTraceLevel>
            <!--Maximum number of trace entries in one file-->
            <UaAppTraceMaxEntries>100000</UaAppTraceMaxEntries>
            <!--Maximum number of backup files-->
            <UaAppTraceMaxBackup>5</UaAppTraceMaxBackup>
            <!--Do not flush the file after each trace entry. The trace file gets flushed automatically from time to time anyway.
                - For maximum trace performance you should set this option to true.
                - If you have issues with missing trace entries in case of an application crash, you should set this option to false. -->
            <UaAppTraceDisableFlush>true</UaAppTraceDisableFlush>
            <!--Trace file-->
            <UaAppTraceFile>[ApplicationPath]/uaserver/uaserver.log</UaAppTraceFile>
            <!--Trace event options. Possible values Disabled, History, HistoryAndEvents-->
            <TraceEvents>History</TraceEvents>
        </Trace>
        <!--Trace configuration end-->
        <!--Certificate store used for PKI certificate handling. Different Endpoints may have different trust lists.-->
        <DefaultApplicationCertificateStore>
            <!--The maximum size of the TrustList in bytes. 0 means no limit.-->
            <MaxTrustListSize>0</MaxTrustListSize>
            <!--For CA signed certificates this flag controls if server shall send the complete certificate chain instead of just sending the certificate.
      This affects the GetEndpoints and CreateSession service.-->
            <SendCertificateChain>true</SendCertificateChain>
            <!--File based certificate store used with OpenSSL
                [ApplicationPath] can be used as placeholder for the application path.-->
            <OpenSSLStore>
                <CertificateTrustListLocation>[ApplicationPath]/uaserver/trusted/certs/</CertificateTrustListLocation>
                <CertificateRevocationListLocation>[ApplicationPath]/uaserver/trusted/crl/</CertificateRevocationListLocation>
                <IssuersCertificatesLocation>[ApplicationPath]/uaserver/issuers/certs/</IssuersCertificatesLocation>
                <IssuersRevocationListLocation>[ApplicationPath]/uaserver/issuers/crl/</IssuersRevocationListLocation>
            </OpenSSLStore>
            <!--Application instance certificate for the Server.-->
            <ServerCertificate>
                <!--File based certificate store used with OpenSSL
                    [ApplicationPath] can be used as placeholder for the application path.-->
                <OpenSSLStore>
                    <ServerCertificate>[ApplicationPath]/uaserver/own/studio.der</ServerCertificate>
                    <ServerPrivateKey>[ApplicationPath]/uaserver/own/studio.pem</ServerPrivateKey>
                </OpenSSLStore>
                <!--Enable server certificate creation if certificate is not available; true/false-->
                <GenerateCertificate>true</GenerateCertificate>
                <!--Settings for a certificate that is generated by the server-->
                <CertificateSettings>
                    <CommonName>[ServerName]</CommonName>
                    <DomainComponent>[NodeName]</DomainComponent>
                    <Organization>Organization</Organization>
                    <OrganizationUnit>Unit</OrganizationUnit>
                    <Locality>LocationName</Locality>
                    <State/>
                    <Country>US</Country>
                    <YearsValidFor>5</YearsValidFor>
                    <DNSName>[NodeName]</DNSName>
                </CertificateSettings>
            </ServerCertificate>
        </DefaultApplicationCertificateStore>
        <!--Endpoint configuration
            This part of the configuration defines the OPC UA communication endpoints
            for the server and their security configurations-->
        <!--Folder used to store rejected client certificates. Administrators can copy files from here to the trust list.-->
        <RejectedCertificatesDirectory>[ApplicationPath]/uaserver/rejected</RejectedCertificatesDirectory>
        <!--Maximum number of certificates stored in the rejected directory.-->
        <RejectedCertificatesCount>100</RejectedCertificatesCount>
        <!--List of configured Endpoints begin-->
        <UaEndpoint>
            <SerializerType>Binary</SerializerType>
            <!-- URL of the Endpoint
                 This URL is used for Discovery and to open the Endpoints in the UA stack if no StackUrl is configured.
                 [NodeName] can be used as placeholder for the computer name. -->
            <Url>opc.tcp://[NodeName]:48010</Url>
            <!-- Optional URL that allows to define a specific address the stack should use to bind to.
                Can be used to bind the endpoint to a specific network card or to localhost only.
            <StackUrl>opc.tcp://192.168.0.15:48010</StackUrl>-->
            <!-- Flag indicating if the endpoint is provided in GetEndpoints and is therefore visible to a client. Default is true. -->
            <IsVisible>true</IsVisible>
            <!-- Flag indicating if the endpoint URL is provided as discovery URL. Default is true. -->
            <IsDiscoveryUrl>true</IsDiscoveryUrl>
            <!-- This option can be activated if certificates are used only for message security but not for application authentication.
                If set to true, all client certificates will be accepted automatically and they are not stored.
                It is strongly recommended to use this option only together with user authentication. -->
            <AutomaticallyTrustAllClientCertificates>false</AutomaticallyTrustAllClientCertificates>
            <!-- For calculating the server signature, the server needs to append the client certificate to the client nonce.
                If the client sends a certificate chain, the server should only use the leaf certificate to calculate the server signature.
                With this setting, the server uses the complete certificate chain instead. This is not the recommended behaviour.
                Only set this flag to work around interoperability issues with misbehaving clients. -->
            <CreateSignatureWithChain>false</CreateSignatureWithChain>
            <!-- Some of the OPC UA security checks are optional in OPC UA or cause interoperability issues with older OPC UA clients
      and can be disabled by an administrator of the OPC UA server through the following configuration options. -->
            <SecurityCheckOverwrites>
                <!-- Flag used to disable the client certificate validation error BadCertificateTimeInvalid. Default is false. -->
                <DisableErrorCertificateTimeInvalid>false</DisableErrorCertificateTimeInvalid>
                <!-- Flag used to disable the client certificate validation error BadCertificateIssuerTimeInvalid. Default is false. -->
                <DisableErrorCertificateIssuerTimeInvalid>false</DisableErrorCertificateIssuerTimeInvalid>
                <!-- Flag used to disable the client certificate validation error BadCertificateRevocationUnknown. Default is false. -->
                <DisableErrorCertificateRevocationUnknown>false</DisableErrorCertificateRevocationUnknown>
                <!-- Flag used to disable the client certificate validation error BadCertificateIssuerRevocationUnknown. Default is false. -->
                <DisableErrorCertificateIssuerRevocationUnknown>false</DisableErrorCertificateIssuerRevocationUnknown>
                <!-- Flag used to disable the ApplicationUri match check between client certificate and parameter in CreateSession.
                     The check is required for compliant OPC UA servers but older clients may provide a wrong ApplicationUri.
                     Default is false. -->
                <DisableApplicationUriCheck>false</DisableApplicationUriCheck>
                <!-- Flag used to disable the client nonce length  check in CreateSession. The check is required for compliant OPC UA
        servers but older clients may provide a client nonce that is shorter than the required 32 bytes. Default is false. -->
                <DisableNonceLengthCheck>false</DisableNonceLengthCheck>
                <!-- Flag used to disable the UserToken PolicyId check in ActivateSession.
                     The check is required for compliant OPC UA servers but older clients may not provide the UserToken PolicyId.
                     Default is false. -->
                <DisableUserTokenPolicyIdCheck>false</DisableUserTokenPolicyIdCheck>
            </SecurityCheckOverwrites>
            <SecuritySetting>
                <SecurityPolicy>http://opcfoundation.org/UA/SecurityPolicy#Basic256</SecurityPolicy>
                <MessageSecurityMode>Sign</MessageSecurityMode>
                <MessageSecurityMode>SignAndEncrypt</MessageSecurityMode>
            </SecuritySetting>
        </UaEndpoint>
        <!--Endpoint configuration end-->
        <!--Maximum age of a request the server allows. Default value 0 is unlimited-->
        <MaxRequestAge>0</MaxRequestAge>
        <!--Maximum number of sessions the server allows to create. Default value 0 is unlimited-->
        <MaxSessionCount>100</MaxSessionCount>
        <!--Maximum number of sessions the server allows per Client, 0 is unlimited-->
        <MaxSessionsPerClient>0</MaxSessionsPerClient>
        <!--Minimum time-out in ms for a sessions the server allows to set. Default value 0 is unlimited-->
        <MinSessionTimeout>10000</MinSessionTimeout>
        <!--Maximum time-out in ms for a sessions the server allows to set. Default value 0 is unlimited-->
        <MaxSessionTimeout>3600000</MaxSessionTimeout>
        <!--Maximum number of Browse Continuation Points managed by a session. Default value 0 is using internal default settings-->
        <MaxBrowseContinuationPoints>0</MaxBrowseContinuationPoints>
        <!--Maximum number of Browse results for one browse operation. Default value 0 is using internal default settings-->
        <MaxBrowseResults>0</MaxBrowseResults>
        <!--Maximum number of nodes to browse the server will accept. Default value 0 is unlimited-->
        <MaxNodesToBrowse>0</MaxNodesToBrowse>
        <!--Maximum number of nodes to use in a TranslateBrowsePathsToNodeIds service request. Default value 0 is unlimited-->
        <MaxNodesPerTranslateBrowsePathsToNodeIds>0</MaxNodesPerTranslateBrowsePathsToNodeIds>
        <!--Maximum number of nodes accepted by server for HistoryRead service for Raw, Modified, Processed and AtTime. Default value 0 is unlimited-->
        <MaxNodesPerHistoryReadData>0</MaxNodesPerHistoryReadData>
        <!--Maximum number of nodes accepted by server for HistoryRead service for Events. Default value 0 is unlimited-->
        <MaxNodesPerHistoryReadEvents>0</MaxNodesPerHistoryReadEvents>
        <!--Maximum number of nodes accepted by server for HistoryUpdate service for Data. Default value 0 is unlimited-->
        <MaxNodesPerHistoryUpdateData>0</MaxNodesPerHistoryUpdateData>
        <!--Maximum number of nodes accepted by server for HistoryUpdate service for Events. Default value 0 is unlimited-->
        <MaxNodesPerHistoryUpdateEvents>0</MaxNodesPerHistoryUpdateEvents>
        <!--Maximum number of History Continuation Points managed by a session. Default value 0 is using internal default settings-->
        <MaxHistoryContinuationPoints>0</MaxHistoryContinuationPoints>
        <!--Minimum publishing interval in milliseconds the server allows-->
        <MinPublishingInterval>50</MinPublishingInterval>
        <!--Maximum publishing interval in milliseconds the server allows. Default value 0 is no limitation-->
        <MaxPublishingInterval>0</MaxPublishingInterval>
        <!--Minimum KeepAlive interval  in milliseconds the server allows-->
        <MinKeepAliveInterval>5000</MinKeepAliveInterval>
        <!--Minimum Subscription lifetime in milliseconds the server allows-->
        <MinSubscriptionLifetime>10000</MinSubscriptionLifetime>
        <!--Maximum Subscription lifetime in milliseconds the server allows. Default value 0 is no limitation-->
        <MaxSubscriptionLifetime>0</MaxSubscriptionLifetime>
        <!--Maximum number of messages in the republish queue the server allows per Subscription.-->
        <MaxRetransmissionQueueSize>20</MaxRetransmissionQueueSize>
        <!--Maximum number of notifications per Publish the server allows. Default value 0 is no limitation-->
        <MaxNotificationsPerPublish>0</MaxNotificationsPerPublish>
        <!--Maximum size of monitored item data queues.-->
        <MaxDataQueueSize>100</MaxDataQueueSize>
        <!--Maximum size of monitored item event queues.-->
        <MaxEventQueueSize>10000</MaxEventQueueSize>
        <!--Maximum number of subscriptions the server allows to create. Default value 0 is unlimited-->
        <MaxSubscriptionCount>0</MaxSubscriptionCount>
        <!--Maximum number of subscriptions the server allows to create per Session. Default value 0 is unlimited-->
        <MaxSubscriptionsPerSession>10</MaxSubscriptionsPerSession>
        <!--Maximum number of monitored items the server allows to create. Default value 0 is unlimited-->
        <MaxMonitoredItemCount>0</MaxMonitoredItemCount>
        <!--Maximum number of monitored items per subscriptions the server allows to create. Default value 0 is unlimited-->
        <MaxMonitoredItemPerSubscriptionCount>0</MaxMonitoredItemPerSubscriptionCount>
        <!--Maximum number of monitored items per session the server allows to create. Default value 0 is unlimited-->
        <MaxMonitoredItemPerSessionCount>0</MaxMonitoredItemPerSessionCount>
        <!--Minimum sample interval supported by the server-->
        <MinSupportedSampleRate>0</MinSupportedSampleRate>
        <!--Settings for the sampling engine.-->
        <AvailableSamplingRates>
            <SamplingRate>0</SamplingRate>
            <SamplingRate>50</SamplingRate>
            <SamplingRate>100</SamplingRate>
            <SamplingRate>250</SamplingRate>
            <SamplingRate>500</SamplingRate>
            <SamplingRate>1000</SamplingRate>
            <SamplingRate>2000</SamplingRate>
            <SamplingRate>5000</SamplingRate>
            <SamplingRate>10000</SamplingRate>
        </AvailableSamplingRates>
        <!--Settings for the available LocaleIds known to be supported by the server.-->
        <AvailableLocaleIds>
            <LocaleId>en</LocaleId>
        </AvailableLocaleIds>
        <!--Settings for the available UA profiles known to be supported by the server.-->
        <AvailableServerProfiles>
            <ServerProfileUri>http://opcfoundation.org/UAProfile/Server/StandardUA</ServerProfileUri>
            <ServerProfileUri>http://opcfoundation.org/UAProfile/Server/DataAccess</ServerProfileUri>
            <ServerProfileUri>http://opcfoundation.org/UAProfile/Server/Methods</ServerProfileUri>
            <ServerProfileUri>http://opcfoundation.org/UAProfile/Server/NodeManagement</ServerProfileUri>
            <ServerProfileUri>http://opcfoundation.org/UAProfile/Server/EventSubscription</ServerProfileUri>
        </AvailableServerProfiles>
        <!--Flag indicating if audit events are activated-->
        <IsAuditActivated>false</IsAuditActivated>
        <!--Settings for the thread pools used in the server application-->
        <ThreadPoolSettings>
            <MinSizeTransactionManager>1</MinSizeTransactionManager>
            <MaxSizeTransactionManager>10</MaxSizeTransactionManager>
            <MinSizeSubscriptionManager>1</MinSizeSubscriptionManager>
            <MaxSizeSubscriptionManager>10</MaxSizeSubscriptionManager>
        </ThreadPoolSettings>
        <!--Build information for the server application software-->
        <ProductUri>urn:Studio:OpcUaServer</ProductUri>
        <ManufacturerName>Studio</ManufacturerName>
        <ProductName>Studio Opc Ua Server</ProductName>
        <SoftwareVersion>1.0</SoftwareVersion>
        <BuildNumber>1</BuildNumber>
        <!--Build information end-->
        <!--Server instance information defined for the server installation.
    [NodeName] can be used as placeholder for the computer name. -->
        <ServerUri>urn:[NodeName]:Studio:OpcUaServer</ServerUri>
        <ServerName>StudioOpcUaServer@[NodeName]</ServerName>
        <!--Server instance information end-->
        <!--Configuration for supported user identity tokens-->
        <UserIdentityTokens>
            <!--Enable anonymous login true/false-->
            <EnableAnonymous>false</EnableAnonymous>
            <!--Enable user/password login true/false-->
            <EnableUserPw>false</EnableUserPw>
            <!--Enable certificate based user login true/false-->
            <EnableCertificate>false</EnableCertificate>
            <!--The security policy to use when encrypting or signing the UserIdentityToken when it is passed to the server.
      This security policy is only applied for None Endpoints. For other Endpoints we use the security policy of the Endpoint.-->
            <SecurityPolicy>http://opcfoundation.org/UA/SecurityPolicy#Basic256</SecurityPolicy>
            <!--Configuration for file based certificate store to handle user certificates.-->
            <DefaultUserCertificateStore>
                <CertificateTrustListLocation>[ApplicationPath]/uaserver/user/trusted/certs/</CertificateTrustListLocation>
                <CertificateRevocationListLocation>[ApplicationPath]/uaserver/user/trusted/crl/</CertificateRevocationListLocation>
                <IssuersCertificatesLocation>[ApplicationPath]/uaserver/user/issuers/certs/</IssuersCertificatesLocation>
                <IssuersRevocationListLocation>[ApplicationPath]/uaserver/user/issuers/crl/</IssuersRevocationListLocation>
            </DefaultUserCertificateStore>
            <!--Folder used to store rejected user certificates.-->
            <RejectedUserCertificatesDirectory>[ApplicationPath]/uaserver/user/rejected/</RejectedUserCertificatesDirectory>
            <!--Maximum number of certificates stored in the rejected directory.-->
            <RejectedUserCertificatesCount>100</RejectedUserCertificatesCount>
        </UserIdentityTokens>
        <!--User identity token configuration end-->
        <!--IDs for default roles defined in the SDK. 
    These IDs are used to control access to audit events, allow trace configuration or certificate configuration. -->
        <UserAndGroupIdsForDefaultRoles>
            <!--The root user has access to everything.-->
            <RootUserId>0</RootUserId>
            <!--Members of the SecurityAdminGroup can receive audit events and configure certificates. -->
            <SecurityAdminGroupId>0</SecurityAdminGroupId>
            <!--Members of the ConfigurationAdminGroup can configure the server trace, receive trace event and read the trace history. -->
            <ConfigurationAdminGroupId>0</ConfigurationAdminGroupId>
        </UserAndGroupIdsForDefaultRoles>
        <!--Ids for default roles end-->
        <!--Discovery configuration
    Configuration for registration with discovery server(s)-->
        <DiscoveryRegistration>
            <!--Flag indicating if the certificates should be exchanged with the windows certificate store -->
            <AutomaticCertificateExchange>false</AutomaticCertificateExchange>
            <!--Path of the local discovery server trust list. This is where the server copies it's certificate to
      if the file based store of the new LDS is used. -->
            <DiscoveryServerTrustListLocation/>
            <!--Store name used for the local discovery server in the windows certificate store -->
            <DiscoveryServerStoreName>UA Applications</DiscoveryServerStoreName>
            <!--Certificate name of the local discovery server in the windows certificate store -->
            <DiscoveryServerCertificateName>UA Local Discovery Server</DiscoveryServerCertificateName>
            <!--Interval in milliseconds for registration with discovery server(s) -->
            <RegistrationInterval>30000</RegistrationInterval>
            <!--List of discovery servers to register with.
                If the list is empty, no registration is executed.
                Default is opc.tcp://localhost:4840 for the local discovery server.
                Additional remote discovery servers can be added-->
            <Url>opc.tcp://127.0.0.1:4840</Url>
        </DiscoveryRegistration>
        <!--Discovery configuration end-->
        <!--Serializer configuration
          This part of the configuration defines the OPC UA Stack serializer settings.
          These are the Security constraints for the serializer. Set this values carefully.-->
        <Serializer>
            <!--The largest size for a memory block the serializer can do when deserializing a message-->
            <MaxAlloc>16777216</MaxAlloc>
            <!--The largest string accepted by the serializer-->
            <MaxStringLength>16776192</MaxStringLength>
            <!--The largest byte string accepted by the serializer-->
            <MaxByteStringLength>16776192</MaxByteStringLength>
            <!--Maximum number of elements in an array accepted by the serializer-->
            <MaxArrayLength>65536</MaxArrayLength>
            <!--The maximum number of bytes per message in total-->
            <MaxMessageSize>16777216</MaxMessageSize>
        </Serializer>
        <!--Serializer configuration end-->
        <!--Settings for the thread pools used in the OPC UA Stack-->
        <StackThreadPoolSettings>
            <!--Controls whether the secure listener uses a thread pool to dispatch received requests-->
            <Enabled>true</Enabled>
            <!--The minimum number of threads in the thread pool-->
            <MinThreads>5</MinThreads>
            <!--The maximum number of threads in the thread pool-->
            <MaxThreads>5</MaxThreads>
            <!--The length of the queue with jobs waiting for a free thread-->
            <MaxJobs>20</MaxJobs>
            <!--If MaxJobs is reached the add operation can block or return an error-->
            <BlockOnAdd>true</BlockOnAdd>
            <!--If the add operation blocks on a full job queue, this value sets the maximum waiting time. 0 is infinite-->
            <Timeout>0</Timeout>
        </StackThreadPoolSettings>
        <!--Provides the redundancy settings for the server-->
        <RedundancySettings>
            <!--Redundancy support options are None, Cold, Warm, Hot and Transparent. Transparent requires special module. -->
            <RedundancySupport>None</RedundancySupport>
        </RedundancySettings>
    </UaServerConfig>
    <General/>
</OpcServerConfig>
